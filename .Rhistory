-[lab1]
###Exercise 1
```{r}
x <- 3
y <- 15
x + y
y - x
x * y
y / x
###Exercise 2
```{r}
x <- 2
y <- 3
z = x^5 > y^4
z
###Exercise 3
```{r}
x <- c(22,62,148,43,129)
x
sum(x)
x/sum(x)
###Exercise 4
```{r}
x <- c("A","T","C","G")
x
sort(x)
```
bibliography: references.bib
getwd()
setwd("/Users/gulalaishah/Desktop/597")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
report_03_11_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-11-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
report_03_11_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-11-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_11_2020)
view(report_03_11_2020)
install.packages("DT")
library(DT)
datatable(report_03_11_2020)
report_03_11_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
str(report_03_11_2020)
report_03_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
str(report_03_13_2020)
report_03_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
report_03_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
str(report_03_13_2020)
report_03_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_13_2020)
report_03_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_13_2020)
view(report_03_13_2020)
report_0_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
report_0_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
str(report_09_13_2020)
report_0_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
report_0_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
report_09_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
report_09_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
str(report_09_13_2020)
report_09_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv"))
str(report_09_13_2020)
view(report)
report_09_13_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv"))
str(report_09_13_2020)
view(report_09_13_2020)
summarise(Deaths = sum(Deaths)
group_by(Deaths)
group_by(Deaths) %>%
summarise(Deaths = sum(Deaths)
reports %>%
group_by(Deaths) %>%
summarise(Deaths = sum(Deaths)
reports %>%
group_by(Deaths)
reports %>%
group_by(Deaths) %>%
summarise(Deaths = sum(Deaths)
reports %>%
group_by(Deaths) %>%
summarise(Deaths = sum(Deaths))
reports %>%
filter(!is.na(Deaths)) %>%
group_by(Deaths) %>%
summarise(Deaths = sum(Deaths))
reports %>%
filter(!is.na(Deaths)) %>%
group_by(Contry/Region) %>%
summarise(Deaths = sum(Deaths))
filter(!is.na(Deaths)) %>%
group_by(Contry/Region) %>%
summarise(Deaths = sum(Deaths))
reports %>%
filter(!is.na(Deaths)) %>%
group_by(Contry_Region) %>%
summarise(Deaths = sum(Deaths))
filter(!is.na(US))
reports_09_13_2020 <- reports_09_13_2020%>%
filter(!is.na(Deaths)) %>%
group_by(Contry/Region) %>%
summarise(Deaths = sum(Deaths)) %>%
report_09_13_2020_top_deaths <- reports_09_13_2020 %>%
group_by(Country/Region) %>%
summarize(Death = sum(Deaths)) %>%
arrange(Deaths)
report_09_13_2020_top_deaths <- reports_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Death = sum(Deaths)) %>%
arrange(Deaths)
reports_09_13_2020 <- report_09_13_2020%>%
filter(!is.na(Deaths)) %>%
group_by(Contry/Region) %>%
summarise(Deaths = sum(Deaths)) %>%
report_09_13_2020_top_deaths <- report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Death = sum(Deaths)) %>%
arrange(Deaths)
reports_09_13_2020 <- report_09_13_2020%>%
group_by(Contry_Region) %>%
summarise(Deaths = sum(Deaths)) %>%
report_09_13_2020 <- report_09_13_2020%>%
group_by(Contry_Region) %>%
summarise(Deaths = sum(Deaths)) %>%
report_09_13_2020 <- report_09_13_2020%>%
group_by(Contry/Region) %>%
summarise(Deaths = sum(Deaths)) %>%
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
report_09_13_2020_top_deaths <- report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Death = sum(Deaths)) %>%
arrange(Deaths)
surveys_complete <- read.csv("surveys_complete.csv")
surveys_complete <- read_csv("surveys_complete.csv")
surveys_complete <- read.csv("surveys_complete.csv")
ggplot(data = surveys_complete)
ggplot(data = surveys_complete, mapping = aes (x = weight, y = hindfoot_length))
report_09_13_2020 %>%
group_by(Contry_Region) %>%
summarise(Deaths = sum(Deaths)) %>%
report_03_13_2020 %>%
group_by(Contry_Region)
report_03_13_2020 %>%
group_by(Contry/Region)
report_03_13_2020 %>%
group_by(Contry/Region)
report_03_11_2020 %>%
summarize(mean_death = mean(Deaths))
report_03_11_2020 %>%
summarise(mean_death = mean(Deaths))
knitr::opts_chunk$set(echo = TRUE)
surveys_sml <- select(filter(surveys, weight < 5), species_id, sex, weight)
surveys_sml <- select(filter(surveys, weight < 5), species_id, sex, weight)
surveys %>%
filter(weight < 5) %>%
select(species_id, sex, weight)
knitr::opts_chunk$set(echo = TRUE)
surveys %>%
filter(weight < 5) %>%
select(species_id, sex, weight)
knitr::opts_chunk$set(echo = TRUE)
surveys_complete <- read.csv("surveys_complete.csv")
ggplot(data = surveys_complete, mapping = aes (x = weight, y = hindfoot_length))
ggplot(data = surveys_complete, mapping = aes (x = weight, y = hindfoot_length))
report_03_11_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-11-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
library(tidyverse)
report_03_11_2020 <- read_csv(url("https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_daily_reports/03-11-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_11_2020)
View(report_03_11_2020)
library(DT)
datatable(report_03_11_2020)
datatable(report_03_11_2020)
View(report_03_11_2020)
report_03_11_2020 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/03-11-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_11_2020)
library(DT)
datatable(report_03_11_2020)
str(report_03_11_2020)
datatable(report_03_11_2020)
str(report_09_13_2020)
datatable(report_09_13_2020)
report_03_13_2020 <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv") %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State")
str(report_03_13_2020)
report_09_13_2020 <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")
str(report_09_13_2020)
view(report_09_13_2020)
report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(total_counts = n())
view(report_09_13_2020)
report_09_13_2020 %>%
filter(Country_Region == "US") %>%
group_by(Province_State) %>%
summarize(Confirmed = sum(Confirmed))
report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Total_Deaths = sum(Deaths)) %>%
arrange(desc(Total_Deaths)) %>%
slice(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
Top10Deaths <- report_03_13_2020 %>%
group_by(Country_Region) %>%
summarize(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths)) %>%
slice_max(Deaths, n= 10)
ggplot(data = Top10Deaths, aes(x = Country_Region, y = Deaths)) +
geom_point()
ggplot(data = Top10Deaths, aes(x = Country_Region, y = Deaths)) +
geom_point()
ggplot(data = Top10Deaths, aes(x = Country_Region, y = Deaths)) +
geom_bar(stat = 'identity')
Top10Confirmed <- report_03_13_2020 %>%
group_by(Country_Region) %>%
summarize(Confirmed = sum(Confirmed)) %>%
arrange(desc(Confirmed)) %>%
slice_max(Confirmed, n= 10)
ggplot(data = Top10Confirmed, aes(x = Country_Region, y = Confirmed)) +
geom_point()
ggplot(data = Top10Confirmed, aes(x = Country_Region, y = Confirmed)) +
geom_bar(stat = 'identity')
Top10Deaths <- report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths)) %>%
slice_max(Deaths, n= 10)
ggplot(data = Top10Deaths, aes(x = Country_Region, y = Deaths)) +
geom_point()
ggplot(data = Top10Deaths, aes(x = Country_Region, y = Deaths)) +
geom_bar(stat = 'identity')
Top10Confirmed <- report_09_13_2020 %>%
group_by(Country_Region) %>%
summarize(Confirmed = sum(Confirmed)) %>%
arrange(desc(Confirmed)) %>%
slice_max(Confirmed, n= 10)
ggplot(data = Top10Confirmed, aes(x = Country_Region, y = Confirmed)) +
geom_point()
ggplot(data = Top10Confirmed, aes(x = Country_Region, y = Confirmed)) +
geom_bar(stat = 'identity')
install.packages("tidyverse")
```{r}
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
surveys_complete <- read_csv("surveys_complete.csv")
ggplot(data = <DATA>, mapping = aes(<MAPPINGS>)) +  <GEOM_FUNCTION>()
ggplot(data = surveys_complete)
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length)) +
geom_point()
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
surveys_plot <- ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length))
surveys_plot +
geom_point()
surveys_plot +
geom_point()
+ geom_point()
library("hexbin")
```{r}
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length)) +
geom_point()
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length)) +
geom_point(alpha = 0.1)
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
geom_point(alpha = 0.1, color = "blue")
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
geom_point(alpha = 0.1, aes(color = species_id))
ggplot(data = surveys_complete,
mapping = aes(x = species_id, y = weight)) +
geom_point(aes(color = plot_type))
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot()
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
geom_violin(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato"
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_violin(alpha = 0)
geom_jitter(alpha = 0.3, color = "tomato"
## Challenge 1
```{r}
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_violin(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato"
```
geom_jitter(alpha = 0.3, color = "tomato"
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_violin(alpha = 0)
scale_y_log10(weight)
ggplot(data = surveys_complete, mapping = aes(x = species_id, scale_y_log10(weight)) +
ggplot(data = surveys_complete, mapping = aes(x = species_id, scale_y_log10(weight)) +
geom_boxplot()
## Challenge 1
```{r}
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_violin(alpha = 0)
```
```{r}
ggplot(data = surveys_complete, mapping = aes(x = species_id, scale_y_log10(weight)) +
geom_boxplot()
```
yearly_counts <- surveys_complete %>%
count(year, genus)
yearly_counts <- surveys_complete %>%
count(year, genus)
yearly_counts <- surveys_complete %>%
count(year, genus)
yearly_counts <- surveys_complete %>%
count(year, genus)
ggplot(data = yearly_counts, aes(x = year, y = n)) +
geom_line()
ggplot(data = yearly_counts, aes(x = year, y = n, group = genus)) +
geom_line()
ggplot(data = yearly_counts, aes(x = year, y = n, color = genus)) +
geom_line()
yearly_counts %>%
ggplot(mapping = aes(x = year, y = n, color = genus)) +
geom_line()
yearly_counts_graph
yearly_counts_graph <- surveys_complete %>%
count(year, genus) %>%
ggplot(mapping = aes(x = year, y = n, color = genus)) +
geom_line()
yearly_counts_graph
ggplot(data = yearly_counts, aes(x = year, y = n)) +
geom_line() +
facet_wrap(facets = vars(genus))
yearly_sex_counts <- surveys_complete %>%
count(year, genus, sex)
yearly_sex_counts <- surveys_complete %>%
count(year, genus, sex)
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(facets =  vars(genus))
ggplot(data = yearly_sex_counts,
mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_grid(rows = vars(sex), cols =  vars(genus))
ggplot(data = yearly_sex_counts,
mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_grid(rows = vars(genus))
ggplot(data = yearly_sex_counts,
mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_grid(cols = vars(genus))
ggplot(data = yearly_sex_counts,
mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(vars(genus)) +
theme_bw()
yearly_weight <- surveys_complete %>%
group_by(year, species_id) %>%
summarize(avg_weight = mean(weight))
ggplot(data = yearly_weight, mapping = aes(x=year, y=avg_weight)) +
geom_line() +
facet_wrap(vars(species_id)) +
theme_bw()
ggplot(data = yearly_sex_counts, aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(vars(genus)) +
labs(title = "Observed genera through time",
x = "Year of observation",
y = "Number of individuals") +
theme_bw()
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(vars(genus)) +
labs(title = "Observed genera through time",
x = "Year of observation",
y = "Number of individuals") +
theme_bw() +
theme(text=element_text(size = 16))
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(vars(genus)) +
labs(title = "Observed genera through time",
x = "Year of observation",
y = "Number of individuals") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 12, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 12),
strip.text = element_text(face = "italic"),
text = element_text(size = 16))
ggplot(surveys_complete, aes(x = species_id, y = hindfoot_length)) +
geom_boxplot() +
grey_theme
grey_theme <- theme(axis.text.x = element_text(colour="grey20", size = 12,
angle = 90, hjust = 0.5,
vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 12),
text=element_text(size = 16))
ggplot(surveys_complete, aes(x = species_id, y = hindfoot_length)) +
geom_boxplot() +
grey_theme
grid.arrange(spp_weight_boxplot, spp_count_plot, ncol = 2, widths = c(4, 6))
spp_count_plot <- ggplot(data = yearly_counts,
aes(x = year, y = n, color = genus)) +
geom_line() +
labs(x = "Year", y = "Abundance")
grid.arrange(spp_weight_boxplot, spp_count_plot, ncol = 2, widths = c(4, 6))
library(gridExtra)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
spp_weight_boxplot <- ggplot(data = surveys_complete,
aes(x = species_id, y = weight)) +
geom_boxplot() +
labs(x = "Species",
y = expression(log[10](Weight))) +
scale_y_log10() +
labs()
spp_count_plot <- ggplot(data = yearly_counts,
aes(x = year, y = n, color = genus)) +
geom_line() +
labs(x = "Year", y = "Abundance")
grid.arrange(spp_weight_boxplot, spp_count_plot, ncol = 2, widths = c(4, 6))
ggsave("combo_plot_abun_weight.png", combo_plot, width = 10, dpi = 300)
my_plot <- ggplot(data = yearly_sex_counts,
aes(x = year, y = n, color = sex)) +
geom_line() +
facet_wrap(vars(genus)) +
labs(title = "Observed genera through time",
x = "Year of observation",
y = "Number of individuals") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 12, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 12),
text = element_text(size = 16))
ggsave("name_of_file.png", my_plot, width = 15, height = 10)
combo_plot <- grid.arrange(spp_weight_boxplot, spp_count_plot, ncol = 2,
widths = c(4, 6))
ggsave("combo_plot_abun_weight.png", combo_plot, width = 10, dpi = 300)
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_boxplot()
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
geom_violin()
gplot(data = surveys_complete, mapping = aes(x = species_id, scale_y_log10(weight))
