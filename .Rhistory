ggtitle("COVID-19 Deaths") +
facet_wrap(~Country_Region, ncol=2, scales="free_y")
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region %in% c("China", "France", "Italy", "Korea, South", "US")) %>%
ggplot(aes(x = Date, y = Deaths, color = Country_Region)) +
geom_point() +
geom_line() +
ggtitle("COVID-19 Deaths")
time_series_long_joined_counts %>%
group_by(Country_Region, Report_Type, Date) %>%
summarise(Counts = sum(Counts)) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date, y = log2(Counts), fill = Report_Type, color = Report_Type)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Cases")
Confirmed_06_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/06-13-2020.csv")) %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_06_13)
Confirmed_09_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_09_13)
Confirmed_06_13_09_13_joined <- full_join(Confirmed_06_13,
Confirmed_09_13, by = c("Province_State"))
Confirmed_06_13_09_13_joined <- full_join(Confirmed_06_13,
Confirmed_09_13, by = c("Province_State")) %>%
rename(Confirmed_06_13 = "Confirmed.x", Confirmed_09_13 = "Confirmed.y") %>%
select(-Country_Region.x, -Country_Region.y) %>%
replace_na(list(Confirmed_06_13 = 0))
which(is.na(Confirmed_06_13_09_13_joined))
Confirmed_06_13_09_13_joined_long <- Confirmed_06_13_09_13_joined %>%
pivot_longer(-c(Province_State),
names_to = "Date", values_to = "Confirmed")
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
```{r}
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
```
```{r}
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
```
library(tidyverse)
Confirmed_State_3_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2020.csv")) %>%
rename(Country_Region = "Country/Region", Province_State = "Province/State") %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_State_3_13)
Confirmed_State_9_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_State_9_13)
setdiff(Confirmed_State_9_13$Province_State, Confirmed_State_3_13$Province_State)
Confirmed_State_9_13 <- Confirmed_State_9_13 %>%
filter(Province_State != "Recovered")
Confirmed_State_3_13_9_13_joined <- full_join(Confirmed_State_3_13,
Confirmed_State_9_13, by = c("Province_State"))
head(Confirmed_State_3_13_9_13_joined)
tail(Confirmed_State_3_13_9_13_joined, 5)
which(is.na(Confirmed_State_3_13_9_13_joined))
Confirmed_State_3_13_9_13_joined <- full_join(Confirmed_State_3_13,
Confirmed_State_9_13, by = c("Province_State")) %>%
rename(Confirmed_3_13_2020 = "Confirmed.x", Confirmed_9_13_2020 = "Confirmed.y") %>%
select(-Country_Region.x, -Country_Region.y) %>%
replace_na(list(Confirmed_3_13_2020 = 0))
head(Confirmed_State_3_13_9_13_joined)
which(is.na(Confirmed_State_3_13_9_13_joined))
Confirmed_State_3_13_9_13_joined_long <- Confirmed_State_3_13_9_13_joined %>%
pivot_longer(-c(Province_State),
names_to = "Date", values_to = "Confirmed")
ggplot(Confirmed_State_3_13_9_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_point(aes(color = Date))
time_series_confirmed <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")
download.file(url="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv",
destfile = "time_series_covid19_confirmed_global.csv")
time_series_confirmed <- read_csv("time_series_covid19_confirmed_global.csv") %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")
head(time_series_confirmed)
time_series_confirmed_long <- time_series_confirmed %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Confirmed")
head(time_series_confirmed_long)
download.file(url="https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv",
destfile = "time_series_covid19_deaths_global.csv")
time_series_deaths <- read_csv("time_series_covid19_deaths_global.csv") %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")
time_series_deaths_long <- time_series_deaths %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "date", values_to = "Deaths")
head(time_series_deaths_long)
time_series_confirmed_long <- time_series_confirmed_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".", remove = FALSE)
head(time_series_confirmed_long)
time_series_deaths_long <- time_series_deaths_long %>%
unite(Key, Province_State, Country_Region, date, sep = ".") %>%
select(Key, Deaths)
time_series_long_joined <- full_join(time_series_confirmed_long,
time_series_deaths_long, by = c("Key")) %>%
select(-Key)
head(time_series_long_joined)
which(is.na(time_series_long_joined$Confirmed))
which(is.na(time_series_long_joined$Deaths))
library(lubridate)
time_series_long_joined$Date <- mdy(time_series_long_joined$Date)
time_series_long_joined_counts <- time_series_long_joined %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long, Date),
names_to = "Report_Type", values_to = "Counts")
head(time_series_long_joined_counts)
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date, y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region %in% c("China", "Japan", "Korea, South", "Italy", "Spain", "US")) %>%
ggplot(aes(x = Date, y =  Deaths)) +
geom_point() +
geom_line() +
ggtitle("COVID-19 Deaths") +
facet_wrap(~Country_Region, ncol=2, scales="free_y")
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region %in% c("China", "France", "Italy", "Korea, South", "US")) %>%
ggplot(aes(x = Date, y = Deaths, color = Country_Region)) +
geom_point() +
geom_line() +
ggtitle("COVID-19 Deaths")
time_series_long_joined_counts %>%
group_by(Country_Region, Report_Type, Date) %>%
summarise(Counts = sum(Counts)) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date, y = log2(Counts), fill = Report_Type, color = Report_Type)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Cases")
Confirmed_06_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/06-13-2020.csv")) %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_06_13)
Confirmed_09_13 <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/09-13-2020.csv")) %>%
filter(Country_Region == "US") %>%
group_by(Province_State, Country_Region) %>%
summarise(Confirmed = sum(Confirmed))
str(Confirmed_09_13)
Confirmed_06_13_09_13_joined <- full_join(Confirmed_06_13,
Confirmed_09_13, by = c("Province_State"))
Confirmed_06_13_09_13_joined <- full_join(Confirmed_06_13,
Confirmed_09_13, by = c("Province_State")) %>%
rename(Confirmed_06_13 = "Confirmed.x", Confirmed_09_13 = "Confirmed.y") %>%
select(-Country_Region.x, -Country_Region.y) %>%
replace_na(list(Confirmed_06_13 = 0))
which(is.na(Confirmed_06_13_09_13_joined))
Confirmed_06_13_09_13_joined_long <- Confirmed_06_13_09_13_joined %>%
pivot_longer(-c(Province_State),
names_to = "Date", values_to = "Confirmed")
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col()
ggplot(Confirmed_06_13_09_13_joined_long, aes(x = Confirmed, y = Province_State)) +
geom_col() +
ggtitle("Confirmed COVID-19 Cases per Province/State")
time_series_long_joined %>%
group_by(Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
ggplot(aes(x = Date, y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("COVID-19 Deaths Worldwide")
time_series_long_joined_new_column <- time_series_long_joined %>%
mutate(Deaths_Confirmed = Deaths / Confirmed) %>%
select(Country_Region, Date, Deaths_Confirmed)
view(time_series_long_joined_new_column)
time_series_long_joined_new_column %>%
filter(Country_Region == "US") %>%
summarize(Deaths_Confirmed, Date) %>%
ggplot(aes(x = Date, y = Deaths_Confirmed)) +
geom_point() +
geom_line() +
ggtitle("US Deaths/Confirmed Cases per Day")
top_10_countries <- time_series_long_joined %>%
group_by(Country_Region, sum(Deaths), Date) %>%
summarise(Confirmed = sum(Confirmed), Deaths = sum(Deaths), min_deaths = min(Deaths)) %>%
arrange(desc(min_deaths)) %>%
slice(1:10)
ggplot(data = top_10_countries, mapping= aes(x <- Date, y <- Deaths)) +
geom_point() +
geom_line()
top_10_countries %>%
group_by(Country_Region, sum(Deaths), Date) %>%
summarise(Deaths = sum(Deaths)) %>%
arrange(desc(Deaths)) %>%
slice_max(Deaths, n = 10)
ggplot(data = top_10_countries, mapping = aes(x = Date, y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("Top 10 Countries with Highest COVID-19 Deaths") +
facet_wrap(~Country_Region, ncol=2, scales="free_y")
top_10_countries %>%
group_by(Country_Region, sum(Deaths), Date) %>%
summarise_at(c("Deaths"), sum) %>%
filter(Country_Region %in% c("Brazil", "France", "India", "Iran", "Italy", "Mexico", "Peru", "Spain", "United Kingdom", "US")) %>%
ggplot(data = top_10_countries, mapping = aes(x = Date, y = Deaths, color = Country_Region)) +
geom_point() +
geom_line() +
ggtitle("Top 10 Countries with Highest COVID-19 Deaths") +
facet_wrap(~ Country_Region)
time_series_confirmed_US_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")) %>%
select(-c("UID","iso2","iso3","code3","FIPS","Admin2")) %>%
pivot_longer(-c("Province_State","Country_Region","Lat","Long_","Combined_Key"), names_to = "Dates", values_to = "Confirmed") %>%
filter(Province_State != "Recovered" )
time_series_confirmed_US_long$Dates <- mdy(time_series_confirmed_US_long$Dates)
time_series_confirmed_US_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv")) %>%
select(-c("UID","iso2","iso3","code3","FIPS","Admin2")) %>%
pivot_longer(-c("Province_State","Country_Region","Lat","Long_","Combined_Key"), names_to = "Dates", values_to = "Confirmed") %>%
filter(Province_State != "Recovered" )
time_series_confirmed_US_long$Dates <- mdy(time_series_confirmed_US_long$Dates)
i <- time_series_confirmed_US_long %>%
group_by(Province_State, Dates) %>%
summarise(SumConfirmed = sum(Confirmed)) %>%
ggplot(aes(x = Dates,  y = SumConfirmed,  color = Province_State)) +
geom_point() +
geom_line() +
facet_wrap(~Province_State, ncol = 5, scales = "free_y")
i
i <- time_series_confirmed_US_long %>%
group_by(Province_State, Dates) %>%
summarise(SumConfirmed = sum(Confirmed)) %>%
ggplot(aes(x = Dates,  y = SumConfirmed,  color = Province_State)) +
geom_point() +
geom_line() +
facet_wrap(~Province_State, ncol = 5, scales = "free_y")
i
i <- time_series_confirmed_US_long %>%
group_by(Province_State, Dates) %>%
summarise(SumConfirmed = sum(Confirmed)) %>%
ggplot(aes(x = Dates,  y = SumConfirmed,  color = Province_State)) +
geom_point() +
geom_line() +
facet_wrap(~Province_State, ncol = 5, scales = "free_y")
i
i <- time_series_confirmed_US_long %>%
group_by(Province_State, Dates) %>%
summarise(SumConfirmed = sum(Confirmed)) %>%
ggplot(aes(x = Dates,  y = SumConfirmed,  color = Province_State)) +
geom_point() +
geom_line() +
facet_wrap(~Province_State, ncol = 5, scales = "free_y")
i
i <- time_series_confirmed_US_long %>%
group_by(Province_State, Dates) %>%
summarise(SumConfirmed = sum(Confirmed)) %>%
ggplot(aes(x = Dates,  y = SumConfirmed,  color = Province_State)) +
geom_point() +
geom_line() +
facet_wrap(~Province_State, ncol = 5, scales = "free_y")
i
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
time_series_confirmed_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")  %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Confirmed")
# Let's get the times series data for deaths
time_series_deaths_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")  %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Deaths")
# Create Keys
time_series_confirmed_long <- time_series_confirmed_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".", remove = FALSE)
time_series_deaths_long <- time_series_deaths_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".") %>%
select(Key, Deaths)
# Join tables
time_series_long_joined <- full_join(time_series_confirmed_long,
time_series_deaths_long, by = c("Key")) %>%
select(-Key)
# Reformat the data
time_series_long_joined$Date <- mdy(time_series_long_joined$Date)
# Create Report table with counts
time_series_long_joined_counts <- time_series_long_joined %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long, Date),
names_to = "Report_Type", values_to = "Counts")
# Plot graph to a pdf outputfile
pdf("time_series_example_plot.pdf", width=6, height=3)
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
dev.off()
<img src="images/time_series_example_plot.png" alt="US COVID-19 Deaths" style="width: 600px;"/>
```{r}
<img src="images/time_series_example_plot.png" alt="US COVID-19 Deaths" style="width: 600px;"/>
```{r}
<img src="images/time_series_example_plot.png" alt="US COVID-19 Deaths" style="width: 600px;"/>
<img src="time_series_example_plot.png" alt="US COVID-19 Deaths" style="width: 600px;"/>
<img src="time_series_example_plot.png" alt="US COVID-19 Deaths" style="width: 600px;"/>
library(tidyverse)
library(lubridate)
library(dplyr)
time_series_confirmed_long <-read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region") %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "confirmed")
times_series_deaths_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region") %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Deaths")
#Create Keys
time_series_confirmed_long <- time_series_confirmed_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".", remove = FALSE)
times_series_deaths_long <- times_series_deaths_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".") %>%
select(Key, Deaths)
#Join tables
time_series_long_joined <- full_join(time_series_confirmed_long, times_series_deaths_long, by = c("Key")) %>%
select(-Key)
#Reformat data
time_series_long_joined$Date <- mdy(time_series_long_joined$Date)
#Create report table with counts
time_series_long_joined_counts <- time_series_long_joined %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long, Date),
names_to = "Report_Type", values_to = "Counts")
#Plot graph to a pdf outputfile
pdf("images/time_series_example_plot.pdf, width = 6, height = 3")
library("plotly")
library(plotly)
library(plotly)
install.packages("plotly")
library(plotly)
ggplotly(
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
)
library(plotly)
ggplotly(
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
)
# Plot the graph using ggplotly
ggplotly(p)
library(plotly)
# Subset the time series data to include US deaths
US_deaths <- time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US")
ggplotly(
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
)
# Subset the time series data to include US deaths
US_deaths <- time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US")
library(plotly)
# Subset the time series data to include US deaths
US_deaths <- time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US")
# Collect the layers for agraph of the US time series data for covid deaths
p <- ggplot(data = US_deaths, aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
# Plot the graph using ggplotly
ggplotly(p)
theme_set(theme_bw())
# Some people needed to use this line instead
# animate(p,renderer = gifski_renderer(), end_pause = 15)
animate(p, end_pause = 15)
library(gganimate)
install.packages("gganimate")
install.packages("transformr")
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
install.packages("transformr")
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
install.packages("transformr")
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
library(gganimate)
library(transformr)
# Some people needed to use this line instead
# animate(p,renderer = gifski_renderer(), end_pause = 15)
anim_save("deaths_5_countries.gif", p)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
time_series_confirmed_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")  %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Confirmed")
# Let's get the times series data for deaths
time_series_deaths_long <- read_csv(url("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")) %>%
rename(Province_State = "Province/State", Country_Region = "Country/Region")  %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long),
names_to = "Date", values_to = "Deaths")
# Create Keys
time_series_confirmed_long <- time_series_confirmed_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".", remove = FALSE)
time_series_deaths_long <- time_series_deaths_long %>%
unite(Key, Province_State, Country_Region, Date, sep = ".") %>%
select(Key, Deaths)
# Join tables
time_series_long_joined <- full_join(time_series_confirmed_long,
time_series_deaths_long, by = c("Key")) %>%
select(-Key)
# Reformat the data
time_series_long_joined$Date <- mdy(time_series_long_joined$Date)
# Create Report table with counts
time_series_long_joined_counts <- time_series_long_joined %>%
pivot_longer(-c(Province_State, Country_Region, Lat, Long, Date),
names_to = "Report_Type", values_to = "Counts")
# Plot graph to a pdf outputfile
pdf("time_series_example_plot.pdf", width=6, height=3)
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
dev.off()
# Plot graph to a png outputfile
ppi <- 300
png("time_series_example_plot.png", width=6*ppi, height=6*ppi, res=ppi)
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("Confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
dev.off()
library(plotly)
ggplotly(
time_series_long_joined %>%
group_by(Country_Region,Date) %>%
summarise_at(c("confirmed", "Deaths"), sum) %>%
filter (Country_Region == "US") %>%
ggplot(aes(x = Date,  y = Deaths)) +
geom_point() +
geom_line() +
ggtitle("US COVID-19 Deaths")
)
library(gganimate)
library(transformr)
